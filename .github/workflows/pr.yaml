name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
  build-blob:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo snap install uefivars
          sudo apt install --yes efitools
      - uses: actions/checkout@v2
      - name: Run aws-secureboot-blob
        run: |
          ./aws-secureboot-blob -s jammy -a amd64 -o blob.amd64.bin
          ./aws-secureboot-blob -s jammy -a arm64 -o blob.arm64.bin
          # for debugging
          uefivars -i aws -o json -I blob.amd64.bin
          uefivars -i aws -o json -I blob.arm64.bin
      - uses: actions/upload-artifact@v3
        with:
          name: blob-artifact
          path: blob.*.bin
  aws-test:
    runs-on: ubuntu-latest
    needs: build-blob
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DEFAULT_REGION: eu-central-1
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: blob-artifact
          path: blobs
      - run: ls -al
        working-directory: blobs
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::156445921216:role/github-actions-role
          role-session-name: gh-action-session
          aws-region: eu-central-1
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: create test instance
        run: |
          ./test-instance

      - name: ssh to instance
        run: |
          ssh-add -l
          ssh -o ConnectionAttempts=30 -o ConnectTimeout=5 -o StrictHostKeyChecking=no ubuntu@${{ env.INSTANCE_IP }} cat /etc/os-release

      - name: run tests
        run: |
          cat << EOF > test.sh
          #!/bin/bash -eux

          # secure boot should be enabled
          mokutil --sb-state|grep enabled

          # install tools for more checks
          apt update
          apt-cache policy efitools
          apt install --yes efitools

          efi-readvar -v KEK
          efi-readvar -v db
          efi-readvar -v dbx
          EOF

          chmod a+x test.sh
          scp -o StrictHostKeyChecking=no test.sh ubuntu@${{ env.INSTANCE_IP }}:
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.INSTANCE_IP }} sudo ./test.sh

      - name: terminate instance
        if: always()
        run: |
          if [ ! -z "${{ env.INSTANCE }}" ]; then
              aws ec2 terminate-instances --instance-ids ${{ env.INSTANCE }}
          fi

      - name: deregister new AMI
        if: always()
        run: |
          if [ ! -z "${{ env.AMI_NEW }}" ]; then
              aws ec2 deregister-image --image-id ${{ env.AMI_NEW }}
          fi
      - name: cleanup copied Snapshot
        if: always()
        run: |
          if [ ! -z "${{ env.AMI_SNAPSHOT_NEW }}" ]; then
              aws ec2 delete-snapshot --snapshot-id ${{ env.AMI_SNAPSHOT_NEW }}
          fi
